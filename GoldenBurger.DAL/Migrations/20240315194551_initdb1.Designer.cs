// <auto-generated />
using System;
using GoldenBurger.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoldenBurger.DAL.Migrations
{
    [DbContext(typeof(GoldenBurgerContext))]
    [Migration("20240315194551_initdb1")]
    partial class initdb1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoldenBurger.Concrete.Basket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SepetAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5608),
                            SepetAdi = "ilkSepet",
                            Status = 0
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Burger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuId");

                    b.ToTable("Burgers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(887),
                            MenuId = 1,
                            Name = "Big King Jr.",
                            PhotoPath = "MenusPictures\\big-king-jr-menu.png",
                            Price = 189.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(941),
                            MenuId = 2,
                            Name = "SteakHouse Burger",
                            PhotoPath = "MenusPictures\\bk-steakhouse-burger-menu.png",
                            Price = 169.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(944),
                            MenuId = 3,
                            Name = "Cheese Burger",
                            PhotoPath = "MenusPictures\\cheeseburger-menu.png",
                            Price = 145.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(947),
                            MenuId = 4,
                            Name = "Double Big King",
                            PhotoPath = "MenusPictures\\double-big-king-menu.png",
                            Price = 120.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(949),
                            MenuId = 5,
                            Name = "Double Cheeseburger",
                            PhotoPath = "MenusPictures\\double-cheeseburger-menu.png",
                            Price = 109.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(953),
                            MenuId = 6,
                            Name = "Double King Chicken",
                            PhotoPath = "MenusPictures\\double-king-chicken-menu.png",
                            Price = 119.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(956),
                            MenuId = 7,
                            Name = "Double Köfte Burger",
                            PhotoPath = "MenusPictures\\double-kofteburger-menu.png",
                            Price = 129.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(958),
                            MenuId = 8,
                            Name = "Double Whopper Jr.",
                            PhotoPath = "MenusPictures\\double-whopper-jr-menu.png",
                            Price = 135.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(961),
                            MenuId = 9,
                            Name = "Double Whopper",
                            PhotoPath = "MenusPictures\\double-whopper-menu.png",
                            Price = 155.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(964),
                            MenuId = 10,
                            Name = "Etli Barbekü Deluxe Burger",
                            PhotoPath = "MenusPictures\\etli-barbeku-deluxe-burger-menu.png",
                            Price = 169.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(967),
                            MenuId = 11,
                            Name = "King Beef Burger",
                            PhotoPath = "MenusPictures\\king-beef-burger-menu.png",
                            Price = 159.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(969),
                            MenuId = 12,
                            Name = "King Chicken",
                            PhotoPath = "MenusPictures\\king-chicken-menu.png",
                            Price = 99.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(971),
                            MenuId = 13,
                            Name = "Köfte Burger",
                            PhotoPath = "MenusPictures\\kofteburger-menu.png",
                            Price = 119.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(974),
                            MenuId = 14,
                            Name = "Mega Double Cheeseburger",
                            PhotoPath = "MenusPictures\\mega-double-cheeseburger-menu.png",
                            Price = 149.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(976),
                            MenuId = 15,
                            Name = "Plant Based Whopper",
                            PhotoPath = "MenusPictures\\plant-based-whopper-menu.png",
                            Price = 129.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(978),
                            MenuId = 16,
                            Name = "Rodeo Whopper",
                            PhotoPath = "MenusPictures\\rodeo-whopper-menu.png",
                            Price = 134.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(980),
                            MenuId = 17,
                            Name = "Tavuklu Barbekü Brioche",
                            PhotoPath = "MenusPictures\\tavuklu-barbeku-brioche-menu.png",
                            Price = 115.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(984),
                            MenuId = 18,
                            Name = "Texas SmokeHouse Burger",
                            PhotoPath = "MenusPictures\\texas-smokehouse-burger-menu.png",
                            Price = 150.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(986),
                            MenuId = 19,
                            Name = "Triple Whopper",
                            PhotoPath = "MenusPictures\\triple-whopper-menu.png",
                            Price = 145.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(988),
                            MenuId = 20,
                            Name = "Trüflü King Beef Burger",
                            PhotoPath = "MenusPictures\\truflu-king-beef-burger-menu.png",
                            Price = 135.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(991),
                            MenuId = 21,
                            Name = "Whopper Jr.",
                            PhotoPath = "MenusPictures\\whopper-jr-menu.png",
                            Price = 99.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 484, DateTimeKind.Local).AddTicks(993),
                            MenuId = 22,
                            Name = "Whopper",
                            PhotoPath = "MenusPictures\\whopper-menu.png",
                            Price = 100.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Chips", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("ChipsType")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuId");

                    b.ToTable("Chips");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            ChipsType = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(140),
                            MenuId = 1,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\tirtikli-patates.png",
                            Price = 34.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(159),
                            MenuId = 2,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 32.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(162),
                            MenuId = 3,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(165),
                            MenuId = 4,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(167),
                            MenuId = 5,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(172),
                            MenuId = 6,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(174),
                            MenuId = 7,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(176),
                            MenuId = 8,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(178),
                            MenuId = 9,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(181),
                            MenuId = 10,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(183),
                            MenuId = 11,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(185),
                            MenuId = 12,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(188),
                            MenuId = 13,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(190),
                            MenuId = 14,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(192),
                            MenuId = 15,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(194),
                            MenuId = 16,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(196),
                            MenuId = 17,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(199),
                            MenuId = 18,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(201),
                            MenuId = 19,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(204),
                            MenuId = 20,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(206),
                            MenuId = 21,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 475, DateTimeKind.Local).AddTicks(208),
                            MenuId = 22,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Drink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuId");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(675),
                            MenuId = 1,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(693),
                            MenuId = 2,
                            Name = "Coca Cola Light",
                            PhotoPath = "MenusPictures\\coca-cola-light.png",
                            Price = 23.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(696),
                            MenuId = 3,
                            Name = "Coca Cola Zero Sugar",
                            PhotoPath = "MenusPictures\\coca-cola-zero-sugar.png",
                            Price = 23.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(698),
                            MenuId = 4,
                            Name = "Fuse Tea",
                            PhotoPath = "MenusPictures\\fuse-tea.png",
                            Price = 20.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(700),
                            MenuId = 5,
                            Name = "Fanta",
                            PhotoPath = "MenusPictures\\fanta.png",
                            Price = 22.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(704),
                            MenuId = 6,
                            Name = "Sprite",
                            PhotoPath = "MenusPictures\\sprite.png",
                            Price = 24.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(707),
                            MenuId = 7,
                            Name = "Ayran 300 ml",
                            PhotoPath = "MenusPictures\\ayran-300-ml.png",
                            Price = 30.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(709),
                            MenuId = 8,
                            Name = "Ayran 195 ml",
                            PhotoPath = "MenusPictures\\ayran-195-ml.png",
                            Price = 20.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(711),
                            MenuId = 9,
                            Name = "Elma Suyu",
                            PhotoPath = "MenusPictures\\elma-suyu.png",
                            Price = 16.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(714),
                            MenuId = 10,
                            Name = "Cappy Atom",
                            PhotoPath = "MenusPictures\\cappy-atom-200-ml.png",
                            Price = 18.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(716),
                            MenuId = 11,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(718),
                            MenuId = 12,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(721),
                            MenuId = 13,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(723),
                            MenuId = 14,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(765),
                            MenuId = 15,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(769),
                            MenuId = 16,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(771),
                            MenuId = 17,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(774),
                            MenuId = 18,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(776),
                            MenuId = 19,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(778),
                            MenuId = 20,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(780),
                            MenuId = 21,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 478, DateTimeKind.Local).AddTicks(782),
                            MenuId = 22,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("BurgerId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("BurgerId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 483, DateTimeKind.Local).AddTicks(7340),
                            Name = "Turşu",
                            Price = 2.5,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            BurgerId = 2,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 483, DateTimeKind.Local).AddTicks(7365),
                            Name = "Domates",
                            Price = 1.5,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            BurgerId = 3,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 483, DateTimeKind.Local).AddTicks(7368),
                            Name = "Ketçap",
                            Price = 1.25,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 483, DateTimeKind.Local).AddTicks(7370),
                            Name = "Mayonez",
                            Price = 1.25,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 483, DateTimeKind.Local).AddTicks(7372),
                            Name = "Hardal",
                            Price = 1.5,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 483, DateTimeKind.Local).AddTicks(7376),
                            Name = "Marul",
                            Price = 2.2000000000000002,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(180),
                            Name = "Big King Jr. Menü",
                            PhotoPath = "MenusPictures\\big-king-jr-menu.png",
                            Price = 219.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(200),
                            Name = "SteakHouse Burger Menü",
                            PhotoPath = "MenusPictures\\bk-steakhouse-burger-menu.png",
                            Price = 229.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(203),
                            Name = "Cheese Burger Menü",
                            PhotoPath = "MenusPictures\\cheeseburger-menu.png",
                            Price = 200.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(205),
                            Name = "Double Big King Menü",
                            PhotoPath = "MenusPictures\\double-big-king-menu.png",
                            Price = 240.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(208),
                            Name = "Double Cheeseburger Menü",
                            PhotoPath = "MenusPictures\\double-cheeseburger-menu.png",
                            Price = 235.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(212),
                            Name = "Double King Chicken Menü",
                            PhotoPath = "MenusPictures\\double-king-chicken-menu.png",
                            Price = 199.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(214),
                            Name = "Double Köfte Burger Menü",
                            PhotoPath = "MenusPictures\\double-kofteburger-menu.png",
                            Price = 235.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(216),
                            Name = "Double Whopper Jr. Menü",
                            PhotoPath = "MenusPictures\\double-whopper-jr-menu.png",
                            Price = 249.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(218),
                            Name = "Double Whopper Menü",
                            PhotoPath = "MenusPictures\\double-whopper-menu.png",
                            Price = 219.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(221),
                            Name = "Etli Barbekü Deluxe Burger Menü",
                            PhotoPath = "MenusPictures\\etli-barbeku-deluxe-burger-menu.png",
                            Price = 269.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(223),
                            Name = "King Beef Burger Menü",
                            PhotoPath = "MenusPictures\\king-beef-burger-menu.png",
                            Price = 280.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(225),
                            Name = "King Chicken Menü",
                            PhotoPath = "MenusPictures\\king-chicken-menu.png",
                            Price = 209.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(227),
                            Name = "Köfte Burger Menü",
                            PhotoPath = "MenusPictures\\kofteburger-menu.png",
                            Price = 216.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(229),
                            Name = "Mega Double Cheeseburger Menü",
                            PhotoPath = "MenusPictures\\mega-double-cheeseburger-menu.png",
                            Price = 230.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(231),
                            Name = "Plant Based Whopper Menü",
                            PhotoPath = "MenusPictures\\plant-based-whopper-menu.png",
                            Price = 250.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(234),
                            Name = "Rodeo Whopper Menü",
                            PhotoPath = "MenusPictures\\rodeo-whopper-menu.png",
                            Price = 269.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(236),
                            Name = "Tavuklu Barbekü Brioche Menü",
                            PhotoPath = "MenusPictures\\tavuklu-barbeku-brioche-menu.png",
                            Price = 215.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(239),
                            Name = "Texas SmokeHouse Burger Menü",
                            PhotoPath = "MenusPictures\\texas-smokehouse-burger-menu.png",
                            Price = 255.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(241),
                            Name = "Triple Whopper Menü",
                            PhotoPath = "MenusPictures\\triple-whopper-menu.png",
                            Price = 299.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(243),
                            Name = "Trüflü King Beef Burger Menü",
                            PhotoPath = "MenusPictures\\truflu-king-beef-burger-menu.png",
                            Price = 310.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(245),
                            Name = "Whopper Jr. Menü",
                            PhotoPath = "MenusPictures\\whopper-jr-menu.png",
                            Price = 268.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 469, DateTimeKind.Local).AddTicks(246),
                            Name = "Whopper Menü",
                            PhotoPath = "MenusPictures\\whopper-menu.png",
                            Price = 236.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("GoldenBurger.DATA.Concrete.Extra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtraProductName")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5182),
                            ExtraProductName = 3,
                            Name = "Çikolatalı Cookie",
                            PhotoPath = "MenusPictures\\cikolatali-cookie.png",
                            Price = 18.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5209),
                            ExtraProductName = 3,
                            Name = "Sufle",
                            PhotoPath = "MenusPictures\\sufle.png",
                            Price = 22.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5212),
                            ExtraProductName = 3,
                            Name = "Vişneli Tatlı",
                            PhotoPath = "MenusPictures\\visneli-tatli.png",
                            Price = 28.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5215),
                            ExtraProductName = 3,
                            Name = "Elmalı Tatlı",
                            PhotoPath = "MenusPictures\\elmali-tatli.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5217),
                            ExtraProductName = 3,
                            Name = "Mini Sundea",
                            PhotoPath = "MenusPictures\\mini-sundae.png",
                            Price = 20.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5220),
                            ExtraProductName = 6,
                            Name = "Mini Acı Sos",
                            PhotoPath = "MenusPictures\\mini-aci-sos.png",
                            Price = 8.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5263),
                            ExtraProductName = 6,
                            Name = "Mini Ranch",
                            PhotoPath = "MenusPictures\\mini-ranch.png",
                            Price = 6.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5267),
                            ExtraProductName = 6,
                            Name = "Mini Ketçap",
                            PhotoPath = "MenusPictures\\mini-ketcap.png",
                            Price = 5.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5269),
                            ExtraProductName = 6,
                            Name = "Mini Mayonez",
                            PhotoPath = "MenusPictures\\mini-mayonez.png",
                            Price = 5.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5272),
                            ExtraProductName = 6,
                            Name = "Mini Bbq",
                            PhotoPath = "MenusPictures\\mini-bbq.png",
                            Price = 6.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5274),
                            ExtraProductName = 6,
                            Name = "Mini Ballı Hardal",
                            PhotoPath = "MenusPictures\\mini-balli-hardal-1.png",
                            Price = 9.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 15, 22, 45, 51, 471, DateTimeKind.Local).AddTicks(5277),
                            ExtraProductName = 6,
                            Name = "Mini Buffalo",
                            PhotoPath = "MenusPictures\\mini-buffalo-1.png",
                            Price = 8.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "adminRoleId",
                            ConcurrencyStamp = "ff1f3dbf-d6c3-4327-936a-ef6beb5bab0c",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "userRoleId",
                            ConcurrencyStamp = "0cd29a3b-bc02-4609-8a21-e25f1c4ec581",
                            Name = "user",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "adminUserId",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1b0e6dfa-2b81-4088-96aa-79641d5aea45",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEIg6sUvWwIsK8aeEnqeaafLQaoZo/6cjwI8k7dGw59hYRoNRRowJh5IVyGC4vSzLiw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "adminUserId",
                            RoleId = "adminRoleId"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Burger", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("burgers")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Menu", "Menu")
                        .WithMany("Burger")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Chips", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("chips")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Menu", "Menu")
                        .WithMany("Chips")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Drink", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("drinks")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Menu", "Menu")
                        .WithMany("Drink")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Ingredient", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("Ingredients")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Burger", "Burger")
                        .WithMany("Ingredients")
                        .HasForeignKey("BurgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Burger");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Menu", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("menus")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("GoldenBurger.DATA.Concrete.Extra", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("extras")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Basket", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("burgers");

                    b.Navigation("chips");

                    b.Navigation("drinks");

                    b.Navigation("extras");

                    b.Navigation("menus");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Burger", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Menu", b =>
                {
                    b.Navigation("Burger");

                    b.Navigation("Chips");

                    b.Navigation("Drink");
                });
#pragma warning restore 612, 618
        }
    }
}
