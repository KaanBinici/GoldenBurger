// <auto-generated />
using System;
using GoldenBurger.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoldenBurger.DAL.Migrations
{
    [DbContext(typeof(GoldenBurgerContext))]
    [Migration("20240318121200_initdb250")]
    partial class initdb250
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoldenBurger.Concrete.Basket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SepetAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(9061),
                            Price = 0.0,
                            SepetAdi = "ilkSepet",
                            Status = 0,
                            Visible = false
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Burger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuId");

                    b.ToTable("Burgers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2074),
                            MenuId = 1,
                            Name = "Big King Jr.",
                            PhotoPath = "MenusPictures\\big-king-jr-menu.png",
                            Price = 189.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2103),
                            MenuId = 2,
                            Name = "SteakHouse Burger",
                            PhotoPath = "MenusPictures\\bk-steakhouse-burger-menu.png",
                            Price = 169.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2150),
                            MenuId = 3,
                            Name = "Cheese Burger",
                            PhotoPath = "MenusPictures\\cheeseburger-menu.png",
                            Price = 145.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2155),
                            MenuId = 4,
                            Name = "Double Big King",
                            PhotoPath = "MenusPictures\\double-big-king-menu.png",
                            Price = 120.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2159),
                            MenuId = 5,
                            Name = "Double Cheeseburger",
                            PhotoPath = "MenusPictures\\double-cheeseburger-menu.png",
                            Price = 109.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2163),
                            MenuId = 6,
                            Name = "Double King Chicken",
                            PhotoPath = "MenusPictures\\double-king-chicken-menu.png",
                            Price = 119.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2166),
                            MenuId = 7,
                            Name = "Double Köfte Burger",
                            PhotoPath = "MenusPictures\\double-kofteburger-menu.png",
                            Price = 129.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2168),
                            MenuId = 8,
                            Name = "Double Whopper Jr.",
                            PhotoPath = "MenusPictures\\double-whopper-jr-menu.png",
                            Price = 135.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2171),
                            MenuId = 9,
                            Name = "Double Whopper",
                            PhotoPath = "MenusPictures\\double-whopper-menu.png",
                            Price = 155.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2174),
                            MenuId = 10,
                            Name = "Etli Barbekü Deluxe Burger",
                            PhotoPath = "MenusPictures\\etli-barbeku-deluxe-burger-menu.png",
                            Price = 169.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2177),
                            MenuId = 11,
                            Name = "King Beef Burger",
                            PhotoPath = "MenusPictures\\king-beef-burger-menu.png",
                            Price = 159.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2179),
                            MenuId = 12,
                            Name = "King Chicken",
                            PhotoPath = "MenusPictures\\king-chicken-menu.png",
                            Price = 99.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2182),
                            MenuId = 13,
                            Name = "Köfte Burger",
                            PhotoPath = "MenusPictures\\kofteburger-menu.png",
                            Price = 119.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2185),
                            MenuId = 14,
                            Name = "Mega Double Cheeseburger",
                            PhotoPath = "MenusPictures\\mega-double-cheeseburger-menu.png",
                            Price = 149.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2187),
                            MenuId = 15,
                            Name = "Plant Based Whopper",
                            PhotoPath = "MenusPictures\\plant-based-whopper-menu.png",
                            Price = 129.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2189),
                            MenuId = 16,
                            Name = "Rodeo Whopper",
                            PhotoPath = "MenusPictures\\rodeo-whopper-menu.png",
                            Price = 134.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2192),
                            MenuId = 17,
                            Name = "Tavuklu Barbekü Brioche",
                            PhotoPath = "MenusPictures\\tavuklu-barbeku-brioche-menu.png",
                            Price = 115.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2195),
                            MenuId = 18,
                            Name = "Texas SmokeHouse Burger",
                            PhotoPath = "MenusPictures\\texas-smokehouse-burger-menu.png",
                            Price = 150.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2198),
                            MenuId = 19,
                            Name = "Triple Whopper",
                            PhotoPath = "MenusPictures\\triple-whopper-menu.png",
                            Price = 145.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2200),
                            MenuId = 20,
                            Name = "Trüflü King Beef Burger",
                            PhotoPath = "MenusPictures\\truflu-king-beef-burger-menu.png",
                            Price = 135.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2203),
                            MenuId = 21,
                            Name = "Whopper Jr.",
                            PhotoPath = "MenusPictures\\whopper-jr-menu.png",
                            Price = 99.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 99, DateTimeKind.Local).AddTicks(2205),
                            MenuId = 22,
                            Name = "Whopper",
                            PhotoPath = "MenusPictures\\whopper-menu.png",
                            Price = 100.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Chips", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("ChipsType")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuId");

                    b.ToTable("Chips");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            ChipsType = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5020),
                            MenuId = 1,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\tirtikli-patates.png",
                            Price = 34.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5045),
                            MenuId = 2,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 32.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5048),
                            MenuId = 3,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5051),
                            MenuId = 4,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5053),
                            MenuId = 5,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5058),
                            MenuId = 6,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5061),
                            MenuId = 7,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5063),
                            MenuId = 8,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5065),
                            MenuId = 9,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5068),
                            MenuId = 10,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5072),
                            MenuId = 11,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5077),
                            MenuId = 12,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5080),
                            MenuId = 13,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5085),
                            MenuId = 14,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5089),
                            MenuId = 15,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5092),
                            MenuId = 16,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5096),
                            MenuId = 17,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5180),
                            MenuId = 18,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5194),
                            MenuId = 19,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5198),
                            MenuId = 20,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5203),
                            MenuId = 21,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            ChipsType = 0,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 89, DateTimeKind.Local).AddTicks(5207),
                            MenuId = 22,
                            Name = "Patates",
                            PhotoPath = "MenusPictures\\patates.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Drink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("MenuId");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7273),
                            MenuId = 1,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7292),
                            MenuId = 2,
                            Name = "Coca Cola Light",
                            PhotoPath = "MenusPictures\\coca-cola-light.png",
                            Price = 23.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7296),
                            MenuId = 3,
                            Name = "Coca Cola Zero Sugar",
                            PhotoPath = "MenusPictures\\coca-cola-zero-sugar.png",
                            Price = 23.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7298),
                            MenuId = 4,
                            Name = "Fuse Tea",
                            PhotoPath = "MenusPictures\\fuse-tea.png",
                            Price = 20.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7301),
                            MenuId = 5,
                            Name = "Fanta",
                            PhotoPath = "MenusPictures\\fanta.png",
                            Price = 22.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7306),
                            MenuId = 6,
                            Name = "Sprite",
                            PhotoPath = "MenusPictures\\sprite.png",
                            Price = 24.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7308),
                            MenuId = 7,
                            Name = "Ayran 300 ml",
                            PhotoPath = "MenusPictures\\ayran-300-ml.png",
                            Price = 30.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7311),
                            MenuId = 8,
                            Name = "Ayran 195 ml",
                            PhotoPath = "MenusPictures\\ayran-195-ml.png",
                            Price = 20.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7313),
                            MenuId = 9,
                            Name = "Elma Suyu",
                            PhotoPath = "MenusPictures\\elma-suyu.png",
                            Price = 16.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7316),
                            MenuId = 10,
                            Name = "Cappy Atom",
                            PhotoPath = "MenusPictures\\cappy-atom-200-ml.png",
                            Price = 18.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7319),
                            MenuId = 11,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7321),
                            MenuId = 12,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7323),
                            MenuId = 13,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7325),
                            MenuId = 14,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7328),
                            MenuId = 15,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7330),
                            MenuId = 16,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7332),
                            MenuId = 17,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7335),
                            MenuId = 18,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7338),
                            MenuId = 19,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7340),
                            MenuId = 20,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7342),
                            MenuId = 21,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 92, DateTimeKind.Local).AddTicks(7344),
                            MenuId = 22,
                            Name = "Coca Cola",
                            PhotoPath = "MenusPictures\\coca-cola.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = false
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("BurgerId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.HasIndex("BurgerId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 98, DateTimeKind.Local).AddTicks(7786),
                            Name = "Turşu",
                            Price = 5.5,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            BurgerId = 2,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 98, DateTimeKind.Local).AddTicks(7818),
                            Name = "Domates",
                            Price = 7.5,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            BurgerId = 3,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 98, DateTimeKind.Local).AddTicks(7868),
                            Name = "Ketçap",
                            Price = 6.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 98, DateTimeKind.Local).AddTicks(7873),
                            Name = "Mayonez",
                            Price = 6.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 98, DateTimeKind.Local).AddTicks(7876),
                            Name = "Hardal",
                            Price = 10.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            BurgerId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 98, DateTimeKind.Local).AddTicks(7880),
                            Name = "Marul",
                            Price = 12.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5741),
                            Name = "Big King Jr. Menü",
                            PhotoPath = "MenusPictures\\big-king-jr-menu.png",
                            Price = 219.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5874),
                            Name = "SteakHouse Burger Menü",
                            PhotoPath = "MenusPictures\\bk-steakhouse-burger-menu.png",
                            Price = 229.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5882),
                            Name = "Cheese Burger Menü",
                            PhotoPath = "MenusPictures\\cheeseburger-menu.png",
                            Price = 200.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5886),
                            Name = "Double Big King Menü",
                            PhotoPath = "MenusPictures\\double-big-king-menu.png",
                            Price = 240.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5889),
                            Name = "Double Cheeseburger Menü",
                            PhotoPath = "MenusPictures\\double-cheeseburger-menu.png",
                            Price = 235.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5896),
                            Name = "Double King Chicken Menü",
                            PhotoPath = "MenusPictures\\double-king-chicken-menu.png",
                            Price = 199.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5899),
                            Name = "Double Köfte Burger Menü",
                            PhotoPath = "MenusPictures\\double-kofteburger-menu.png",
                            Price = 235.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5902),
                            Name = "Double Whopper Jr. Menü",
                            PhotoPath = "MenusPictures\\double-whopper-jr-menu.png",
                            Price = 249.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5905),
                            Name = "Double Whopper Menü",
                            PhotoPath = "MenusPictures\\double-whopper-menu.png",
                            Price = 219.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5910),
                            Name = "Etli Barbekü Deluxe Burger Menü",
                            PhotoPath = "MenusPictures\\etli-barbeku-deluxe-burger-menu.png",
                            Price = 269.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5914),
                            Name = "King Beef Burger Menü",
                            PhotoPath = "MenusPictures\\king-beef-burger-menu.png",
                            Price = 280.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5917),
                            Name = "King Chicken Menü",
                            PhotoPath = "MenusPictures\\king-chicken-menu.png",
                            Price = 209.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 13,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5921),
                            Name = "Köfte Burger Menü",
                            PhotoPath = "MenusPictures\\kofteburger-menu.png",
                            Price = 216.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 14,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5925),
                            Name = "Mega Double Cheeseburger Menü",
                            PhotoPath = "MenusPictures\\mega-double-cheeseburger-menu.png",
                            Price = 230.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 15,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5928),
                            Name = "Plant Based Whopper Menü",
                            PhotoPath = "MenusPictures\\plant-based-whopper-menu.png",
                            Price = 250.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 16,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5932),
                            Name = "Rodeo Whopper Menü",
                            PhotoPath = "MenusPictures\\rodeo-whopper-menu.png",
                            Price = 269.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 17,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5936),
                            Name = "Tavuklu Barbekü Brioche Menü",
                            PhotoPath = "MenusPictures\\tavuklu-barbeku-brioche-menu.png",
                            Price = 215.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 18,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5941),
                            Name = "Texas SmokeHouse Burger Menü",
                            PhotoPath = "MenusPictures\\texas-smokehouse-burger-menu.png",
                            Price = 255.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 19,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5944),
                            Name = "Triple Whopper Menü",
                            PhotoPath = "MenusPictures\\triple-whopper-menu.png",
                            Price = 299.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 20,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5948),
                            Name = "Trüflü King Beef Burger Menü",
                            PhotoPath = "MenusPictures\\truflu-king-beef-burger-menu.png",
                            Price = 310.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 21,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5952),
                            Name = "Whopper Jr. Menü",
                            PhotoPath = "MenusPictures\\whopper-jr-menu.png",
                            Price = 268.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 22,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 82, DateTimeKind.Local).AddTicks(5955),
                            Name = "Whopper Menü",
                            PhotoPath = "MenusPictures\\whopper-menu.png",
                            Price = 236.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("GoldenBurger.DATA.Concrete.Extra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtraProductName")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BasketId");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8784),
                            ExtraProductName = 3,
                            Name = "Çikolatalı Cookie",
                            PhotoPath = "MenusPictures\\cikolatali-cookie.png",
                            Price = 18.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 2,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8808),
                            ExtraProductName = 3,
                            Name = "Sufle",
                            PhotoPath = "MenusPictures\\sufle.png",
                            Price = 22.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 3,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8812),
                            ExtraProductName = 3,
                            Name = "Vişneli Tatlı",
                            PhotoPath = "MenusPictures\\visneli-tatli.png",
                            Price = 28.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 4,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8814),
                            ExtraProductName = 3,
                            Name = "Elmalı Tatlı",
                            PhotoPath = "MenusPictures\\elmali-tatli.png",
                            Price = 25.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 5,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8816),
                            ExtraProductName = 3,
                            Name = "Mini Sundea",
                            PhotoPath = "MenusPictures\\mini-sundae.png",
                            Price = 20.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 6,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8821),
                            ExtraProductName = 6,
                            Name = "Mini Acı Sos",
                            PhotoPath = "MenusPictures\\mini-aci-sos.png",
                            Price = 8.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 7,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8823),
                            ExtraProductName = 6,
                            Name = "Mini Ranch",
                            PhotoPath = "MenusPictures\\mini-ranch.png",
                            Price = 6.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 8,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8866),
                            ExtraProductName = 6,
                            Name = "Mini Ketçap",
                            PhotoPath = "MenusPictures\\mini-ketcap.png",
                            Price = 5.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 9,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8870),
                            ExtraProductName = 6,
                            Name = "Mini Mayonez",
                            PhotoPath = "MenusPictures\\mini-mayonez.png",
                            Price = 5.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 10,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8873),
                            ExtraProductName = 6,
                            Name = "Mini Bbq",
                            PhotoPath = "MenusPictures\\mini-bbq.png",
                            Price = 6.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 11,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8876),
                            ExtraProductName = 6,
                            Name = "Mini Ballı Hardal",
                            PhotoPath = "MenusPictures\\mini-balli-hardal-1.png",
                            Price = 9.0,
                            Status = 0,
                            Visible = true
                        },
                        new
                        {
                            ID = 12,
                            BasketId = 1,
                            Count = 0,
                            CreatedDate = new DateTime(2024, 3, 18, 15, 11, 59, 85, DateTimeKind.Local).AddTicks(8878),
                            ExtraProductName = 6,
                            Name = "Mini Buffalo",
                            PhotoPath = "MenusPictures\\mini-buffalo-1.png",
                            Price = 8.0,
                            Status = 0,
                            Visible = true
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "adminRoleId",
                            ConcurrencyStamp = "0b4f9fc4-f25d-42d1-be8d-10d711dc8f85",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "userRoleId",
                            ConcurrencyStamp = "93ccae6a-338f-46d9-95cf-9f19c06fce59",
                            Name = "user",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "adminUserId",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8752647a-4e32-4c30-bcaf-ecd68db61414",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEDowS1OwhP8SSTHP/hyj1GyYUL8Bio/JdgjVEFM8uPpsQF3gmzL5eW/y7kgkhRjXqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "adminUserId",
                            RoleId = "adminRoleId"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Burger", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("burgers")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Menu", "Menu")
                        .WithMany("Burger")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Chips", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("chips")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Menu", "Menu")
                        .WithMany("Chips")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Drink", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("drinks")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Menu", "Menu")
                        .WithMany("Drink")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Ingredient", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("Ingredients")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoldenBurger.Concrete.Burger", "Burger")
                        .WithMany("Ingredients")
                        .HasForeignKey("BurgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Burger");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Menu", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("menus")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("GoldenBurger.DATA.Concrete.Extra", b =>
                {
                    b.HasOne("GoldenBurger.Concrete.Basket", "Basket")
                        .WithMany("extras")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Basket", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("burgers");

                    b.Navigation("chips");

                    b.Navigation("drinks");

                    b.Navigation("extras");

                    b.Navigation("menus");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Burger", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("GoldenBurger.Concrete.Menu", b =>
                {
                    b.Navigation("Burger");

                    b.Navigation("Chips");

                    b.Navigation("Drink");
                });
#pragma warning restore 612, 618
        }
    }
}
